AC_INIT(yasnet, 0.4, volgarenok@gmail.com)

AC_LANG_PUSH(C++)
AC_CHECK_PROGS(CXX, [g++ icc clang++], [""])
AC_PROG_CXX

# hts
AC_SEARCH_LIBS([hts_open], [hts], [hts_exists=yes],
			   [hts_exists=no])

AS_IF([test "x$hts_exists" = xyes],
	    [],
	    [AC_MSG_ERROR(can not find hts lib)])
# end hts

# openmp
AC_ARG_ENABLE([openmp],
	[],
	[], [enable_openmp=yes])

AS_IF([test "x$enable_openmp" = xyes],
	    [
		AC_OPENMP
		AC_SUBST(OPENMP_CXXFLAGS)
	    ],
	    [AC_MSG_NOTICE([openmp disabled])])
# end openmp

# srun
AC_ARG_ENABLE([srun],
	[AS_HELP_STRING([--enable-srun],
			[Enable cluster running])],
	[], [enable_srun=no])

AS_IF([test "x$enable_srun" != xno],
	    [
	        AC_CHECK_PROG(SRUN_PREFIX, [srun], [have_srun=yes], [have_srun=no])
		    AC_SUBST(SRUN_PREFIX)
		    AS_IF([test "x$have_srun" = xno]
		    [AC_MSG_ERROR([srun required but not found])],
				[]
		    )
	    ],
	    [])
# end srun

AC_SUBST(CXX)
AC_SUBST(LDPATH)
AC_LANG_POP(C++)
AC_CONFIG_FILES([Makefile.config])
AC_OUTPUT
